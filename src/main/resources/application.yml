spring:
  web:
    resources:
      static-locations: file:static-content, classpath:/META-INF/resources/, classpath:/resources/, classpath:/static/, classpath:/public/
  datasource:
    url: jdbc:mysql://localhost:3306/peeper
    username: root
    password: password
  application:
    name: peeper-backend
  graphql:
    graphiql:
      enabled: true
    cors:
      allow-credentials: true
      allowed-origins: http://localhost:4200
      allowed-methods: GET,POST
  flyway:
    create-schemas: true
    enabled: true
    default-schema: peeper
    schemas: peeper
    init-sqls: CREATE SCHEMA IF NOT EXISTS peeper;
  ai:
    ollama:
      base-url: http://localhost:11434
      chat:
        options:
          model: llama3.2:latest
          xxx-model: llama3.2-vision:latest
          temperature: 0.0
    openai:
        api-key: (set_env_variable)
        base-url: https://api.openai.com
        chat:
          options:
            model: gpt-4o-mini
            temperature: 0.0
server:
  port: 5000

peeper:
  comparison-service-provider: "ollama"