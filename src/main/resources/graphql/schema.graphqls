type VideoSnap {
    id: ID!
    feed: Feed!
    created: String!
    modified: String!
    data: String!
}

type SnapComparison {
    id: ID!
    created: String!
    modified: String!
    current: VideoSnap!,
    previous: VideoSnap,
    numPersons: Int!
    comparisons: [String]!
    feed: Feed!
}

input VideoSnapInput {
    feedId: ID!
    data: String!
}

type Feed {
    id: ID!
    created: String!
    modified: String!
    userId: Int!
    name: String!
}

input FeedInput {
    userId: Int!
    name: String!
}

# The Root Query for the application
type Query {
    compareVideoSnapsById(id1: ID!, id2: ID!): SnapComparison!
    videoSnapsForFeed(feedId: ID!): [VideoSnap]!
    comparisonsForFeed(feedId: ID!): [SnapComparison]!
    videoSnaps: [VideoSnap]!
    videoSnap(id: ID!): VideoSnap
    feeds: [Feed]!
    feed(id: ID!):Feed
}

# The Root Mutation for the application
type Mutation {
    createAndCompareVideoSnap(input: VideoSnapInput!) : SnapComparison!
    createVideoSnap(input: VideoSnapInput!) : VideoSnap!
    deleteVideoSnap(id: ID!): Boolean
    createFeed(input: FeedInput!) : Feed!
    deleteFeed(id: ID!): Boolean
}